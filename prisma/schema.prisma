// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model countries {
  id   String @id @unique
  name String
}

model User {
  id       Int              @id @default(autoincrement())
  email    String           @unique
  password String
  name     String
  picture  String?
  isActive Boolean          @default(true)
  orders   PurchaseOrders[]
}

model sawmils {
  id            Int              @id @default(autoincrement())
  uid           String           @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  address       String
  city          String
  PurchaseOrder PurchaseOrders[]
  inspections   inspections[]
}

model clients {
  id            Int              @id @default(autoincrement())
  uid           String           @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  PurchaseOrder PurchaseOrders[]
}

model PurchaseOrders {
  id          Int           @id @default(autoincrement())
  userId      Int
  sawmillId   Int
  clientId    Int
  po          String
  grade       String
  thikness    String
  width       String
  large       String
  quantity    String
  port        String
  etd         DateTime?     @db.Date
  eta         DateTime?     @db.Date
  status      PoStatus
  user        User          @relation(fields: [userId], references: [id])
  sawmills    sawmils       @relation(fields: [sawmillId], references: [id])
  clients     clients       @relation(fields: [clientId], references: [id])
  inspections inspections[]
}

model inspections {
  id              Int      @id @default(autoincrement())
  sawmillId       Int
  purchaseOrderId Int?
  inspectionDate  DateTime

  sawmill       sawmils         @relation(fields: [sawmillId], references: [id])
  purchaseOrder PurchaseOrders? @relation(fields: [purchaseOrderId], references: [id])
}

enum PoStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
  COMPLETED
}
